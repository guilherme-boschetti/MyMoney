plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'dagger.hilt.android.plugin'
    id 'com.google.firebase.crashlytics'
}
apply plugin: 'kotlin-android'

android {
    compileSdk 33

    Properties admobProps = new Properties()
    admobProps.load(new FileInputStream(file("../admob.properties")))

    Properties signingProps = new Properties()
    signingProps.load(new FileInputStream(file("../signing.properties")))

    defaultConfig {
        applicationId "com.guilhermeb.mymoney"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "com.guilhermeb.mymoney.di.HiltTestRunner" // "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [adMobAppID: admobProps.ADMOB_APP_ID]
        resValue "string", "admob_banner_id_moneyhostactivity", admobProps.ADMOB_BANNER_ID_MONEYHOSTACTIVITY

        buildConfigField "boolean", "IS_FREE", "false"
        buildConfigField "boolean", "IS_PRO", "false"
    }

    signingConfigs {
        release {
            storeFile = file(signingProps.STORE_FILE)
            storePassword = signingProps.STORE_PASSWORD
            keyAlias = signingProps.KEY_ALIAS
            keyPassword = signingProps.KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-Debug"
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        // https://www.geeksforgeeks.org/how-to-change-the-default-generated-apk-name-in-android-studio/
        applicationVariants.all {
                // this method is use to rename your all apk weather it may be signed(release apk) or unsigned(debug apk)
            variant ->
                variant.outputs.each{
                        // on below line we are setting a name to our apk as 'My Money ${variant.versionName}.apk'
                    output->
                        // on below line we are adding version name to our .apk file along with the app name
                        def name = "My Money ${variant.versionName}.apk"
                        // on below line we are setting the outputFile name to our apk file
                        output.outputFileName = name
                }
        }
    }

    flavorDimensions "version"
    productFlavors {
        full {
            dimension "version"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher",
                    appRoundIcon: "@mipmap/ic_launcher_round"
            ]
        }
        free {
            dimension "version"
            applicationIdSuffix ".free"
            versionNameSuffix "-Free"
            buildConfigField "boolean", "IS_FREE", "true"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher_free",
                    appRoundIcon: "@mipmap/ic_launcher_free_round"
            ]
        }
        pro {
            dimension "version"
            applicationIdSuffix ".pro"
            versionNameSuffix "-Pro"
            buildConfigField "boolean", "IS_PRO", "true"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher_pro",
                    appRoundIcon: "@mipmap/ic_launcher_pro_round"
            ]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    dataBinding {
        enabled true
    }
    namespace 'com.guilhermeb.mymoney'
}

kapt {
    correctErrorTypes true
}

dependencies {
    // KTX
    implementation 'androidx.core:core-ktx:1.9.0'
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // AppCompat
    implementation 'androidx.appcompat:appcompat:1.6.1'
    // Material Components
    implementation 'com.google.android.material:material:1.8.0'
    // ConstraintLayout
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    // Annotation
    implementation 'androidx.annotation:annotation:1.6.0'
    // RecyclerView
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    // LifeCycle LiveData
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    // LifeCycle ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    // == -- Navigation -- ==
    def navigation_version = "2.5.3"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    // == -- == -- ==
    // == -- Unit Tests -- ==
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "com.google.truth:truth:1.1.3" // Google Truth
    // == -- == -- ==
    // SplashScreen
    implementation 'androidx.core:core-splashscreen:1.0.0'
    // DataStore
    implementation 'androidx.datastore:datastore-preferences:1.0.0'
    // == -- Room Database -- ==
    def room_version = "2.5.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Java use annotationProcessor instead of kapt
    implementation "androidx.room:room-ktx:$room_version" // Kotlin Extensions and Coroutines support for Room
    // == -- == -- ==
    // == -- Coroutines -- ==
    def coroutines_version = "1.6.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    // Coroutines Tests
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    // == -- == -- ==
    // == -- Dagger Hilt (DI: dependency injection) -- ==
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    // Dagger Hilt Tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"// For instrumented tests
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version" // For Java use androidTestAnnotationProcessor instead of kaptAndroidTest
    // == -- == -- ==
    // == -- Firebase -- ==
    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:30.1.0')
    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'
    // Authentication
    implementation 'com.google.firebase:firebase-auth-ktx'
    // Realtime Database
    implementation 'com.google.firebase:firebase-database-ktx'
    // Crashlytics
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    // == -- == -- ==
    // Charts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    // Excel file .xls
    implementation group: 'net.sourceforge.jexcelapi', name: 'jxl', version: '2.6.12'
    // == -- Retrofit -- ==
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    // == -- == -- ==
    // FlexboxLayout
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    // == -- Google Play review (rate the app) -- ==
    def review_version = "2.0.1"
    implementation "com.google.android.play:review:$review_version"
    // For Kotlin users also add the Kotlin extensions library for Play In-App Review:
    implementation "com.google.android.play:review-ktx:$review_version"
    // == -- == -- ==
    // Google AdMob (Ads SDK)
    implementation 'com.google.android.gms:play-services-ads:21.5.0'
}